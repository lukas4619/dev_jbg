<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ShelvesMapper">
	
	<!--表名 -->
	<sql id="tableName">
		TSHELVES
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		ID,	
		SHELVESNAME,	
		RANKCOUNT,	
		STOREID,	
		SHELVESTYPEID,	
		CREATEDATE,	
		LASTDATE
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{ID},	
		#{SHELVESNAME},	
		#{RANKCOUNT},	
		#{STOREID},	
		#{SHELVESTYPEID},	
		#{CREATEDATE},	
		#{LASTDATE}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		SHELVESNAME,	
		RANKCOUNT,	
		STOREID,	
		SHELVESTYPEID,	
		CREATEDATE,	
		LASTDATE
		) values (
		#{SHELVESNAME},	
		#{RANKCOUNT},	
		#{STOREID},	
		#{SHELVESTYPEID},	
		#{CREATEDATE},	
		#{LASTDATE}
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			ID = #{ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			SHELVESNAME = #{SHELVESNAME},
			RANKCOUNT = #{RANKCOUNT},
			STOREID = #{STOREID},
			SHELVESTYPEID = #{SHELVESTYPEID},
			CREATEDATE = #{CREATEDATE},
			LASTDATE = #{LASTDATE}
		where 
		ID = #{ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			ID = #{ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		SELECT tshelves.*,(SELECT tcproperty.`name` FROM tcproperty where tcproperty.id=tshelves.shelvesTypeId) as  shelvesTypeName,
(SELECT tstore.storeName FROM tstore where tstore.id=tshelves.storeId) as storeName FROM tshelves
		where 1=1
		<if test="pd!=null">
			<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
				and shelvesName LIKE CONCAT(CONCAT('', #{pd.keywords}),'%')
			</if>
			<if test="pd.shelvesTypeId!=-1 and pd.shelvesTypeId!=null">
				and shelvesTypeId=#{pd.shelvesTypeId}
			</if>
			<if test="pd.storeId!=-1 and pd.storeId!=null">
				and storeId=#{pd.storeId}
			</if>
			<if test="pd.lastStart!= null and pd.lastStart != ''">
		 <![CDATA[ AND  DATE_FORMAT(createDate,'%Y-%m-%d') >=#{pd.lastStart}]]>
			</if>
			<if test="pd.lastEnd!= null and pd.lastEnd != ''">
		 <![CDATA[ AND  DATE_FORMAT(createDate,'%Y-%m-%d') <= #{pd.lastEnd} ]]>
			</if>
		</if>
		order by createDate desc
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
        <if test="storeId!=-1 and storeId!=null">
				and storeId=#{storeId}
			</if>
		order by createDate asc
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 414024003@qq.com -->
</mapper>